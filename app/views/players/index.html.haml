%script{:src => 'http://js.pusher.com/2.0/pusher.min.js', :type => 'text/javascript'}
%input#user_session_token{:type => 'hidden', :value => "#{@session_id}"}

.notifications-container.for-popup-messaging

.game-board.hidden-initially

- if (@room_state == GAME_ROOM_STATE_PLAYING || @current_user)
  /You appears inside ready game room! Start to play!
  :javascript
    drawGameBoard

- else
  /Controls panel, for new game room creating
  .create-room-panel
    Create a game room or wait until somebody creates one
    %br
    %span.input-title
      Row count:
    %input.rows{:type => 'text', :value => '', :placeholder => "#{GAME_ROOM_MIN_DIMENSION} - #{GAME_ROOM_MAX_DIMENSION} cells"}
    %br
    %span.input-title
      Columns count:
    %input.cols{:type => 'text', :value => '', :placeholder => "#{GAME_ROOM_MIN_DIMENSION} - #{GAME_ROOM_MAX_DIMENSION} cells"}
    %input.create-room{:type => 'button', :value => 'Create!'}


:javascript

  // Enable pusher logging - don't include this in production
  Pusher.log = function(message) {
    if (window.console && window.console.log) window.console.log(message);
  };
  WEB_SOCKET_DEBUG = true;
  // End pusher logging configuration

  var pusher = new Pusher("#{PUSHER_API_KEY}");
  var channel = pusher.subscribe("#{PUSHER_CHANNEL_NAME}");

  channel.bind("#{PUSHER_EVENT_ALERT}", alertEvent);
  channel.bind('#{PUSHER_EVENT_WAIT}', waitingEvent);
  channel.bind('#{PUSHER_EVENT_START}', startingEvent);

  //Notification pusher event that triggers, when one player sends a message to another
  function alertEvent(data) {
    showNotification(data.message);
  }
  //Notification pusher event, that triggers when user creates a game room, and ready to wait for second player
  function waitingEvent(data) {
    $('.create-room-panel').fadeOut();
    showNotification('Waiting for guest connecting..');
  }
  //Notification pusher event, that triggers when second player connecting to game room
  function startingEvent(data) {
    drawGameBoard();
  }

  //Helper function: display simple notification message
  function showNotification(message) {
    //#$('.notifications-container').slideUp();
    $('.notifications-container').html(message);
    $('notifications-container').fadeIn();
    console.log(123);
  }

  //Helper function: draw game board of current room
  function createRoomSignal() {
    // create REST
    rows_count = $('.rows').val();
    cols_count = $('.cols').val();
    $.post('players', { rows: rows_count, cols: cols_count })
  }

  //Helper function: draw game board of current room
  function drawGameBoard() {
    $.post('/players/draw_game_board.js');
  }

  //Helper function: server notifing with `user disconnected from game room` event
  function sendLogoutSignal() {
    $.post('/players/logout_user');
  }

  //Attempt to trigger `user disconnected` event
  $(window).bind('beforeunload', function(){
    alert('aaa');
    sendLogoutSignal();
  });

  //Document ready, bind event method:
  jQuery(document).ready(function($) {
   $(".create-room").click(function(){
     createRoomSignal();
   });
  });